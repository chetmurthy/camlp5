#use "topfind";;
#directory "../local-install/lib/camlp5";;
#directory "+compiler-libs" ;;
#load "ocamlcommon.cma" ;;
#load "odyl.cma";;
#load "camlp5.cma";;
#require "ounit2";;
#require "fmt";;
#require "rresult";;
#require "pcre";;
#require "bos";;

(* #load "pa_schemer.cmo";; *)
#directory "../etc";;
#directory "../meta";;
#directory "../main";;
#directory "../etc";;

#load "pa_o.cmo";;
#load "pa_op.cmo";;
#load "pr_o.cmo";;
#load "pr_op.cmo";;
Pcaml.inter_phrases := Some ";;\n";;

(*
#load "pa_r.cmo";;
#load "pa_rp.cmo";;
#load "pr_r.cmo";;
#load "pr_ro.cmo";;
#load "pr_rp.cmo";;
Pcaml.inter_phrases := Some ";\n";;
*)
(*
#load "pa_lispr.cmo";;
#load "pa_extend.cmo";;
#load "q_MLast.cmo" ;;
*)
(*
#load "pr_official.cma";;
#load "papr_official.cmo" ;;
*)
(*
#load "pa_extend.cmo";;
#load "q_MLast.cmo";;
*)
(*
#load "q_phony.cmo";;
*)

Exparser.optim := false ;;

#load "testutil.cmo";;
#load "testutil2.cmo";;

open OUnit2 ;;
open Testutil ;;
open Testutil2 ;;
(*
#load "roundtrip_lexer.cmo";;
open Roundtrip_lexer ;;
*)
let pp_plexing_lexbuf b = Fmt.(pf stdout "<<%s>>" (Plexing.Lexbuf.get b)) ;;
#install_printer pp_plexing_lexbuf ;;

(*
#load "papr_matrix_test.cmo" ;;
#load "r2r_test.cmo" ;;
*)

let pp_loc (loc : Location.t) = Format.print_string "<loc>" ;;
#install_printer pp_loc ;;

(*
;;; Local Variables: ***
;;; mode:tuareg ***
;;; End: ***

*)
